/* Input a string which contains some palindrome substrings. 
Find out the position of palindrome substrings if exist and replace it by *. 
(For example if input string is “bob has a radar plane” then it should convert in “*** has a ***** plane”.)
 */

import * as readline from 'readline';

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

function isPalindrome(word: string): boolean {
    let reversedWord = "";
    if (word.length > 1) {
        for (let i = word.length - 1; i >= 0; i--) {
            reversedWord += word[i];
        }
    }
    if (word == reversedWord) {
        return true;
    }
    else {
        return false;
    }
}


function starPalainromes(sentence: string): void {
    let originalSentence: string = sentence;
    let finalSentence ="";
    let splitedWords: string[] = originalSentence.split(" ");
    for (let i = 0; i < splitedWords.length; i++) {
        if (isPalindrome(splitedWords[i])) {
            let stars: string = "";
            for (let j = 0; j < splitedWords[i].length; j++) {
                stars += '*';
            }
            splitedWords[i] = stars;
        }
    }
    splitedWords.forEach(function(element){
        finalSentence+=element+" ";
    })
    console.log(`Palindrome converted with '*': ${finalSentence}\n`);
}



rl.question("\nEnter String: ", (input: string) => {
    starPalainromes(input);
    rl.close();
})